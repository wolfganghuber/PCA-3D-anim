---
title: "Animation for teaching PCA"
author: "Wolfgang Huber"
date: "`r date()`"
format:
  html:
    embed-resources: false
    page-layout: full
    toc: true
    css: wh.css
highlight-style: tango
---

<!-- {{< video pca-animation.mp4 >}} -->

[Code on GitHub](https://github.com/wolfganghuber/PCA-3D-anim)

**To do / What should be done**:
3D raytracing scene with data as cloud of (metallic) points, together with their original coordinate system. Light source at infinity, 2D plane 'on the floor', showing the shadows of the points. Varianceometers (e.g., barplots) that shows variance components for 1st and 2nd axis of the plane, and residual variance. Point cloud rotating until variances along 1st and 2nd axis are optimized.

```{r}
#| label: loadpkgs
#| message: false
#| warning: false
library("rayrender")
library("animation")
```

For more on the decathlon data, see [the MSMB book](https://www.huber.embl.de/msmb/07-chap.html#what-are-the-data-matrices-and-their-motivation).

```{r}
#| label: decathlon
data("olympic", package = "ade4")
athletes = setNames(olympic$tab, c("m100", "long", "weight", "high", "m400", "m110", "disc", "pole", "javel", "m1500"))
variables = c("m100", "weight", "m400")
mat = as.matrix(athletes[, variables])
```

```{r}
smat = scale(mat, center = TRUE, scale = TRUE)
pca = prcomp(smat, scale. = FALSE, center = FALSE)
```

```{r}
#| fig-width: 5
#| fig-height: 5
#| out-width: "100%"
#  generate_studio()
scene = 
generate_ground(material=diffuse(color = "#cccccc"),depth=-10) |>
  add_object(sphere(x = 0, y = 2, material = glossy(color="#2b6eff", reflectance = 0.05))) |>
  add_object(sphere(x = 2, y = 2, z = 2, material = diffuse(color="#2b6eff"))) 
  
for(i in 1:3) {
  astart = 4 * c(-1,-1,-1)
  aend  = -4 + 4 * (1:3==i)
  atext = -4 + 5 * (1:3==i)
  scene = add_object(scene, arrow(start = astart, end = aend, tail_proportion = 0.9, 
                                  material = diffuse(color="black"))) |>
    add_object(text3d(paste(i), x = atext[1], y = atext[2], z = atext[3], 
      text_height = 0.6, orientation = c("yz", "xz", "xy")[i], material = diffuse(color="black")))
}

scene = add_object(scene, sphere(y = 40, material = light(intensity = 1000)))

render_scene(scene, parallel = TRUE, 
             width = 400, height = 400, samples = 128,
#             width = 600, height = 600, samples = 512,
             lookfrom = c(0, 50, 10),  lookat = c(0, 0, 0), clamp_value=8)

```

# Session Info

```{r}
#| label: sessioninfo
Sys.time()
devtools::session_info()
```