---
title: "Animation for teaching PCA"
author: "Wolfgang Huber"
date: "`r date()`"
format:
  html:
    embed-resources: false
    page-layout: full
    toc: true
    css: wh.css
highlight-style: tango
---

```{r}
library("plot3D")
library("animation")
library("MASS")
```

```{r}
#| label: turtles
#| eval: false
#| echo: false
turtles = read.table("/Users/whuber/clones/MSMB-Quarto/data/PaintedTurtles.txt", header = TRUE)
labs = c("length", "width", "height")
mat = as.matrix(turtles[, labs])
```
```{r}
#| label: decathlon
data("olympic", package = "ade4")
athletes = setNames(olympic$tab, 
  c("m100", "long", "weight", "high", "m400", "m110", "disc", "pole", "javel", "m1500"))
labs = c("m100", "weight", "m400")
mat = as.matrix(athletes[, labs])
```

```{r}
smat = scale(mat, center = TRUE, scale = TRUE)
pca = prcomp(mat, scale. = FALSE, center = FALSE)
```

Create an animated 3D PCA visualization, rotating and projecting principal components.

```{r}
#| label: view
view = function(
  angle = seq(-180, 180, length.out = 120),  # 120 frames for a smooth rotation
  maxd = 0,
  colplane = "#606060",
  surf = NULL
  ) {
  for (theta in angle) {
    scatter3D(
      x    = smat[, 1],         y    = smat[, 2],         z    = smat[, 3],
      xlab = colnames(smat)[1], ylab = colnames(smat)[2], zlab = colnames(smat)[3],
      pch = 19, cex = 1, col = "blue", main = NULL,
      theta = theta, 
      phi = 30, # 20 + 20*sin(theta/180*pi)
      surf = surf
    )
    for(a in seq_len(maxd))
      lines3D(
        x = pca$rotation[1, a] * 2 * c(-1,1), 
        y = pca$rotation[2, a] * 2 * c(-1,1),
        z = pca$rotation[3, a] * 2 * c(-1,1),
        col = c(colplane = "#606060", colplane = "#606060")[a], 
        lwd = 2, add = TRUE
      )
  }
}
```

```{r}
#| label: thesurf
M = mesh(seq(-2, 2, by = 0.2), seq(-2, 2, by = 0.2)) 
thesurf = list(
  x = pca$rotation[1, 1] * M$x + pca$rotation[1, 2] * M$y,  
  y = pca$rotation[2, 1] * M$x + pca$rotation[2, 2] * M$y,  
  z = pca$rotation[3, 1] * M$x + pca$rotation[3, 2] * M$y
)
```

Open an animation device

```{r}
#| label: saveGIF
saveGIF({ 
  view(maxd=0);
  view(maxd=1);
  view(maxd=2);
  view(maxd=2, surf = thesurf)
  }, interval = 0.05, movie.name = "pca-animation.gif", ani.width = 600, ani.height = 600)
```

![pca-animation.gif](pca-animation.gif)




# Session Info

```{r}
#| label: sessioninfo
Sys.time()
devtools::session_info()
```